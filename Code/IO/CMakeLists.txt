SET(BTKIO_SRCS
  btkIODevice.cpp
  btkBinaryStream.cpp
  btkBuffer.cpp
  btkFile.cpp
  btkIOHandler.cpp
  # Trial formats
  TrialFormats/btkTrialIOHandler.cpp
  TrialFormats/btkC3DHandler.cpp
  # TrialFormats/btkQTMHandler.cpp
)

ADD_LIBRARY(IO ${BTK_LIBS_BUILD_TYPE} ${BTKIO_SRCS})
TARGET_LINK_LIBRARIES(IO Trial lzo)
TARGET_INCLUDE_DIRECTORIES(IO PUBLIC
  $<BUILD_INTERFACE:${BTK_BINARY_DIR}>
  $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/TrialFormats>
  $<BUILD_INTERFACE:${BTK_SOURCE_DIR}/ThirdParties/eigen3>
  $<INSTALL_INTERFACE:include/btk>
  $<INSTALL_INTERFACE:include/btk/3rdparty/eigen3>
  $<INSTALL_INTERFACE:include/btk/3rdparty/>
)
GENERATE_EXPORT_HEADER(IO
                       BASE_NAME BTK_IO
                       EXPORT_FILE_NAME btkIOExport.h)

SET_TARGET_PROPERTIES(IO PROPERTIES ${BTK_LIBRARY_PROPERTIES})
IF (NOT ${BTK_BUILD_SHARED_LIBS})
  SET_TARGET_PROPERTIES(IO PROPERTIES COMPILE_FLAGS -DBTK_IO_STATIC_DEFINE)
ENDIF()

INSTALL(TARGETS IO EXPORT BTKTargets
  LIBRARY DESTINATION lib
  ARCHIVE DESTINATION lib
  RUNTIME DESTINATION bin
  INCLUDES DESTINATION include
)

FILE(GLOB __files "${CMAKE_CURRENT_SOURCE_DIR}/*.h")
FILE(GLOB __private "${CMAKE_CURRENT_SOURCE_DIR}/*_p.h")
IF (__private) 
  LIST(REMOVE_ITEM __files ${__private})
ENDIF ()
INSTALL(
  FILES 
    ${__files}
    ${CMAKE_CURRENT_BINARY_DIR}/btkIOExport.h
  DESTINATION include
  COMPONENT dev
)
